<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[system templar]]></title>
  <link href="http://shawn-sterling.github.com/atom.xml" rel="self"/>
  <link href="http://shawn-sterling.github.com/"/>
  <updated>2012-12-17T00:52:44-08:00</updated>
  <id>http://shawn-sterling.github.com/</id>
  <author>
    <name><![CDATA[shawn sterling]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[My first LISA conference]]></title>
    <link href="http://shawn-sterling.github.com/blog/2012/12/16/my-first-lisa-conference/"/>
    <updated>2012-12-16T21:53:00-08:00</updated>
    <id>http://shawn-sterling.github.com/blog/2012/12/16/my-first-lisa-conference</id>
    <content type="html"><![CDATA[<p>I convinced my $dayjob to spring for a trip to
<a href="https://www.usenix.org/conference/lisa12">LISA12</a> in San Diego. Some places it
is easier than others to convince management it&#8217;s a good idea, it wasn&#8217;t too
bad for me.</p>

<p>For those who have never been to a LISA before, here is how it works:</p>

<h3>Training Program</h3>

<p>The event starts Sunday morning with training programs. Some are half day
programs, and some are full day. You have to sign up in advance for what
training program you want to attend*, and the training programs run until
Friday. One day worth of training session(s) costs $710.00 USD (this is the
usenix member price, but since joining usenix costs 50 dollars and the discount
is worth $170.00 USD, pretty much everyone joins usenix). There are various
deals for signing up for more training as well. The available training programs
are layed out
<a href="https://www.usenix.org/conference/lisa12/training-program/training-program">here</a>.</p>

<h3>Technical Sessions</h3>

<p>The
<a href="https://www.usenix.org/conference/lisa12/tech-schedule/technical-sessions">technical sessions</a>
start on Wednesday, and run through until Friday. The technical sessions are
shorter (1.5 hours or so) but are generally more advanced topics than what is
in the training programs. One day of technical sessions cost $405.00 USD (same
170 dollar discount applied already) or you can get 3 days of technical
sessions for $965.00.</p>

<h3>Golden Passport*</h3>

<p>The golden passport allows you to go to any technical training, or technical
session. As well, in the technical session conference rooms there are areas
that are reserved seating (right at the front) for people with a golden
passport. This is pretty cool, because if you decide that you don&#8217;t like the
training that you are attending, you can leave and go to another one. The
golden passport also comes with a cooler ID badge than everyone else, which
declares to everyone that you are a golden passport holder. It costs $4,075.00
USD, and while expensive would be a great way to enjoy the conference.</p>

<h3>Birds of a Feather</h3>

<p>The training programs / technical sessions end at 5:00 PM, and there is a 2
hour break for dinner; after which the birds of a feather (aka bof (pronounced
BOFF)) start. There are 2 kinds of bofs, a vendor bof or a individually
organized bof.</p>

<p>A vendor bof usually has booze at the back, to entice you to attend; while the
vendor either tries to sell you on their product, or sell you on working for
them (they try to recruit you).</p>

<p>The user bofs are generally more
<a href="https://www.usenix.org/conference/lisa12/birds-feather-sessions">random topics</a>
and a lot were organized at the last minute and written on the sign at the conference:</p>

<p><img src="http://shawn-sterling.github.com/images/bofboard.jpg" title="Bof Board" ></p>

<h3>Vendor Booths</h3>

<p>Lastly there was the Vendor area, which is what it sounds like. There were many
(59) vendors that had lots of swag to hand out. This is the first conference
that I have been to, that in order to get the better swag (tshirts,
flashlights, etc) you needed to allow the vendor to scan your id badge (which
had a 2D bar code on the back with all of your contact info. Hopefully I don&#8217;t
start getting spammed like crazy, but I won&#8217;t hold my breath.</p>

<p>Some of my vendor highlights:</p>

<p><strong>Google&#8217;s Quest for the pins:</strong></p>

<p>Google gave out 1 pin to everybody, and via their questforthepins.com site you
had to do some simple sysadmin questions to progress to the next pin. There
were 5 pins in total, and the questions got harder as you go, but most people
attending got all 5 pins (myself included).</p>

<p><strong>Rackspace&#8217;s breakfix challenge:</strong>
Rackspace had 2 laptops setup with virtual machines running CentOS 6.3
that were broken, and you had to fix the virtual machine. They timed
how fast you could solve the problem. Us geeks love fixing things so
this was enjoyed by many. I did the challenge in ~9 minutes or so, I
could have gone faster but was typo&#8217;ing a lot on the tiny laptop
keyboards (and the sun was in my eyes :) ).</p>

<h3>My Experience</h3>

<p>This year&#8217;s LISA was held at the
<a href="http://www.sheratonsandiegohotel.com/">San Diego Sheraton</a> which was a pretty
nice hotel. Here is the view from the balcony of my room:</p>

<p><img src="http://shawn-sterling.github.com/images/roomview.jpg" title="My room view panaramic" ></p>

<p>While attending LISA (or any conference really) I think it is a must to stay at
the conference hotel. I arrived Monday evening (So I could be ready for
Tuesdays training programs), pretty much right after checking in I went to the
bar and asked some guys wearing geek tshirts if I could join them, and was made
welcome. Almost all of the tables in the bar and lobby were occupied by people
using their phones/tablets/laptops and talking shop.</p>

<p>Many of the conversations I had in the lobbies and hallways were worth the
price of admission by itself. If you were thinking about deploying $product
you could easily find some people who had already done so, and were moving on
to something better, or maybe tell you horror stories of just how bad (or
fantastic) $product was. Or tell you what $product_competitor was like. The
best part being, that these were <em>colleagues</em> <strong>not</strong> salesmen, and their input
was insanely valuable.</p>

<p>I especially enjoyed the level of expertise at the conference. There was an
extremely good chance someone more expert than you was nearby and happy to talk
shop.</p>

<h3>What I did</h3>

<p>I wanted to checkout what the training was like, but was more interested in the
technical sessions. So, I did 1 day of training, and 3 days of technical
sessions.</p>

<p>The nice thing about doing 1 day worth of technical sessions, you get a USB key
loaded with the training materials for all of the technical sessions. So
according to me you would be remiss if you did not do at least one day of
technical training. Having the training materials is not as nice as being in
the classroom, and being able to ask questions and whatnot but it is pretty
cool to be able to check out. So far I&#8217;ve only gone over a few of them; but
this is due to the full schedule each day provides (if you choose to go to
everything).</p>

<p>The training/sessions run from 9:00 AM until 5:00 PM (with breaks for food),
then the bofs start at 7:00 PM and run until 11:00 PM. After the bofs I would
hang around in the lobby or bar until 1:00 AM talking with various groups of
sysadmins.</p>

<p>One of the things that surprised me, was just how far some people traveled to
be at LISA. I met people from Belgium, Germany, Ireland, Norway, Australia,
Brazil, etc. Next year&#8217;s conference is in Washington DC, which is quite a bit
further for me to travel. However, when I think about all the international
travellers I met, I don&#8217;t think I should complain.</p>

<p>Another cool thing, was after the first day, I started to see a few familiar
faces at a few of the technical sessions that I was going to, so we started to
hang out in between sessions. We then made plans to go out for lunches and
dinners to talk shop. Since then we have all exchanged info, and I look
forwarding to talking to them on IRC (I have put quite a few names to faces
on the #lopsa channel on freenode).</p>

<h3>My Highlight Reel</h3>

<p><strong>My favorite training session:</strong><br>
<em>NOTE:</em> I only took 2 half day sessions<br>
Ganeti: Your private virtualization cloud - Tom Lemoncelli &amp; Guido Trotter</p>

<p><strong>My favorite bof:</strong><br>
I&#8217;ve made a huge mistake (organizer unknown)<br></p>

<p>This deserves a bit of a write up. My favorite bof was a user bof entitled
&#8216;I&#8217;ve made a huge mistake&#8217;. It was very last minute. It was was kind of
like an alcoholics anonymous for sysadmins. People shared their screw ups,
and what they did to fix them. It was pretty awesome (I don&#8217;t think I can
repeat any of those stories), including and especially my own :) )</p>

<p><strong>My favorite technical session:</strong><br>
15 years of DevOps<br>
I was really floored in seeing the 15 year old slides talking about the
same problems and issues that we are having now. Here is a pic of the
devops talk:</p>

<p><img src="http://shawn-sterling.github.com/images/confroom.jpg" title="DevOps panaramic" ></p>

<p><strong>My favorite quote from the conference:</strong><br>
(from the disruptive technology panel)<br>
&#8220;Software is going to stick with us like Herpes.&#8221; - Theo Schlossnagle, OmniTI</p>

<p><strong>The reception (Shaken, Not Stirred)</strong><br></p>

<p>After Thursday&#8217;s events were finished at 5:00 most people dropped off their
gear and grabbed a coat (it was raining and slightly chilly) and several buses
took us to the &#8216;Grape Street Peer&#8217;. We went aboard a large boat:</p>

<p><img src="http://gallery.photo.net/photo/12999613-md.jpg" title="I'm on a boat!" ></p>

<p>and had a nice meal with an open bar, and got to play blackjack, roulette, and
craps with some fake money that was handed out. It was pretty funny, because I
would say 50+ percent of attendees knew how to count cards. The staff handed
out extra fake money to whoever lost quickly so it didn&#8217;t really matter. As a
bonus we got to keep some of the custom LISA&#8217;12 casino chips at the end of the
night.</p>

<h3>Final Thoughts</h3>

<p>I quite enjoyed the experience, and look forward to attending another LISA. I
will hopefully be going to the Washington DC one, but if not I will for sure be
at the 2014 one in Seattle.</p>

<p>All in all, I had a great time.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An analysis on dell's dset tool]]></title>
    <link href="http://shawn-sterling.github.com/blog/2012/10/16/dells-dset-an-analysis/"/>
    <updated>2012-10-16T22:26:00-07:00</updated>
    <id>http://shawn-sterling.github.com/blog/2012/10/16/dells-dset-an-analysis</id>
    <content type="html"><![CDATA[<p>what is dset?</p>

<p>DSET is &#8220;Dell System E-Support Tool&#8221;, it is available for windows, 32bit linux and 64 bit linux. Essentially dell uses this tool to gather information about your server to help them troubleshoot. I&#8217;m only writing about the 64 bit linux version.</p>

<p>why do you care?</p>

<p>If you call dell tech support sooner or later (sooner I&#8217;m betting) they are going to ask for a dset. I wanted to dig into, what they are gathering and share with my fellow sysadmins.</p>

<h4>The story</h4>

<p>I had a raid controller battery go bad after 2 years, still under warranty, but dell wanted a dset. Never mind I had a dmidecode for the firmware versions and some megacli64 output to show the battery reports, they wanted a dset.</p>

<p>Here&#8217;s how my conversation went:</p>

<p>dell: There is a firmware bug that falsely reports a bad battery when your battery is still good, we are going to need a dset.<br/>
me: does dset need root?<br/>
dell: yes.<br/>
me: what does it need root for, as in, what exactly is it running?<br/>
dell: I don&#8217;t know. <br/>
me: okay I&#8217;ll download it, check it out, and call you back.</p>

<p>I&#8217;m in the medical industry, so installing new/unvetted software on production servers is usually a no-no, and it makes me nervous. So I wasn&#8217;t about to install it without some testing and analysis (on a blank virtual machine).</p>

<p>In fairness to dell, I could have said &#8220;I&#8217;m a gold customer with a 4 hour turnaround, ship me the new battery now please&#8221; and they would have. but I like to be co-operative with my fellow techies if I can.</p>

<h1>The analysis</h1>

<p>I&#8217;m not one to trust binaries that need to be run as root very much, so let&#8217;s take a look at what we are getting ourselves into.</p>

<p>Here&#8217;s <a href="http://support.dell.com/support/topics/global.aspx/support/en/dell_system_tool">dell&#8217;s dset page</a></p>

<p>at time of writing the latest version is 3.2.0.141_x64_A01.bin</p>

<p>Due to running this on a virtual machine it didn&#8217;t want to install from running the script, so I extracted it manually via:</p>

<pre><code>tail -n+20 dell-dset-3.2.0.141_x64_A01.bin | tar -xvz
</code></pre>

<p>The tarball doesn&#8217;t make it&#8217;s own directory it litters a bit in your current directory (shame shame).</p>

<h2>install.sh</h2>

<p>The install.sh does a bunch of pre-checks to see if you have supported hardware before collecting it&#8217;s data. It&#8217;s fairly simple to disable the check and run it anyway or add your system to the &#8216;support_hw_list&#8217; or just copy some exports from the install script and run (more on this later).</p>

<p>Once it decides it will install it will install one/some/all of the following depending on what options you choose:</p>

<pre><code>rpm -Uhv rpms/srvadmin-hapi* &gt;/dev/null 2&gt;&amp;1
rpm -Uhv rpms/srvadmin-storelib-sysfs*.rpm &gt;/dev/null 2&gt;&amp;1
rpm -Uhv rpms/dell-dset-common* --nodeps &gt;/dev/null 2&gt;&amp;1
rpm -Uhv rpms/dell-dset-collector* --nodeps &gt;/dev/null 2&gt;&amp;1
rpm -Uhv rpms/dell-dset-provider* --nodeps &gt;/dev/null 2&gt;&amp;1
</code></pre>

<p>rhel only:</p>

<pre><code>rpm -ihv rpms/RHEL/sblim-sfcb*.rpm --nodeps &gt;/dev/null 2&gt;&amp;1
rpm -Uhv rpms/RHEL/sblim-cmpi-base*.rpm --nodeps &gt;/dev/null 2&gt;&amp;1
</code></pre>

<p>sles only:</p>

<pre><code>rpm -Uhv rpms/SLES/cim-schema*.rpm &gt;/dev/null 2&gt;&amp;1
rpm -ihv rpms/SLES/sblim-sfcb*.rpm --nodeps &gt;/dev/null 2&gt;&amp;1
rpm -Uhv rpms/SLES/sblim-indication_helper*.rpm &gt;/dev/null 2&gt;&amp;1
rpm -Uhv rpms/SLES/sblim-cmpi-base*.rpm --nodeps &gt;/dev/null 2&gt;&amp;1
</code></pre>

<p>Okay, I&#8217;m not a fan of the &#8211;nodeps, but if they are staying in their own sandbox I can forgive them. So let&#8217;s find out. On the first set of rpms:</p>

<pre><code>$ rpm -qlp *.rpm |grep -v "^/opt"
/etc/init.d/dsm_sa_ipmi
/etc/init.d/instsvcdrv
/etc/ld.so.conf.d/srvadmin-hapi-x86_64.conf
/etc/sysconfig/dsm_sa_ipmi
/usr/lib64/libdchapi.so.5
/usr/lib64/libdchapi64.so
/usr/lib64/libdchbas.so.5
/usr/lib64/libdchbas64.so
/usr/lib64/libdchcfl.so.5
/usr/lib64/libdchcfl64.so
/usr/lib64/libdchesm.so.5
/usr/lib64/libdchesm64.so
/usr/lib64/libdchipm.so.5
/usr/lib64/libdchipm64.so
/usr/lib64/libdchtvm.so.5
/usr/lib64/libdchtvm64.so
</code></pre>

<p>Alright, not going to install this in the production environment already, but lets throw caution to the wind on this vm.</p>

<p>I&#8217;m running centos, so depending on what options I select, the dset installer may install sblim (sublime), with nodeps of course. This could be problematic if you are also using the epel sublime package.</p>

<p>At least they are no longer using rpm &#8211;force &#8211;nodeps like they were in previous versions of dset (which they still get you to use if you are using rhel 5.x)).</p>

<p>The install.sh parses out what you want to do and runs the &#8216;collector&#8217; program with the various options (more on this later).</p>

<h2>Manual Install</h2>

<p>Going to play with the dell-dset*.rpm&#8217;s first.</p>

<p>For fun I looked at a rpm -ivh dell-dset*.rpm to see what dependencies I was about to ignore. What&#8217;s weird is they are packaging all of their dependencies, so I&#8217;m not sure why they don&#8217;t just update the spec to do a provides: bla and fix it. Maybe they are trying not to mess with the rpm database, but if that was the case, why are we using rpms at all? Running rpm &#8211;nodeps is almost the same as doing a tarball. How much stuff are they doing in their rpm&#8217;s %pre and %post that they can&#8217;t do in their install script? I digress.</p>

<p>Let&#8217;s get this installed.</p>

<pre><code>rpm --nodeps -ivh dell-dset*.rpm
</code></pre>

<p>This will install to /opt/dell/advdiags/dset</p>

<h2>The Collector</h2>

<pre><code>cd /opt/dell/advdiags/dset/bin
./collector --help
  File "/usr/lib/python3.1/site-packages/cx_Freeze/initscripts/Console3.py", line 27, in &lt;module&gt;
</code></pre>

<p>Now we know it&#8217;s a python 3.1 script. :)</p>

<pre><code>$ file collector
collector: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.4, stripped
</code></pre>

<p>But not something we can easily look at without getting a python decompiler or strace involved.</p>

<p>Our paths won&#8217;t be correct but dell gave us a collector.sh which will setup the correct paths for you (and restore your old path when you are done) that&#8217;s nice.</p>

<pre><code>./collector.sh --help
</code></pre>

<p>there we go. a nice help file so we can figure out what we want to do. Being that I&#8217;m on a vm, the hardware option isn&#8217;t going to do much for me. So I&#8217;ll start with the software.</p>

<pre><code>./collector.sh -d sw
</code></pre>

<p>It asks right away for my root password (I&#8217;m already running it as root). If I reached this stage in production I would abort, but I&#8217;m on a vm, so I&#8217;ll break out and change root to &#8216;1234&#8217; and run it again. But not to worry, the dset documentation states:</p>

<pre><code>NOTE: Root credentials are necessary for the DSET
        Provider to collect inventory or
        configuration information about the system.
        DSET does not store this password. The root
        password must be specified each time a report
        is collected.
</code></pre>

<p>We&#8217;ll find out if this is true or not shortly.</p>

<pre><code>./collector.sh -d sw -p 1234
</code></pre>

<p>huzzah! I have a report.</p>

<pre><code>./collector.sh -d sw -p 1234 -v yes
</code></pre>

<p>Now I have a report with privacy enabled to compare.</p>

<h2>The Report</h2>

<p>The report gets thrown into a passworded zip file. The password is completely meaningless as, if you unzip it with no password, it unzips a text file which tells you the password is &#8216;dell&#8217;. So I unzip&#8217;ed again this time with the super secret password. The password is the same in privacy mode or non privacy mode.</p>

<h3>The non privacy report</h3>

<p>The non privacy report gathers it&#8217;s data from many cfg files and logs. It also parses the data into xml/xsl pages which I assume dell has a nice tool to go through quickly to see what&#8217;s what.</p>

<p>From looking at the logs directory the collector is gathering the following:</p>

<pre><code>cat boot/grub/menu.lst
cat boot/grub/device.map
ls /boot
uptime
cat /proc/meminfo
lsmod
cat /etc/modprobe.conf
cat lib/modules/current/modules.dep
ifconfig
cat /etc/resolv.conf
cat /etc/hosts
cat /etc/sysconfig/network-scripts/ifcfg-*
df
cat /proc/scsi/scsi
fdisk -l
free
hostname
list of all installed rpms / versions / etc
iptables dump
ldconfig
lspci
mount
osversion
print's environment settings
ps
pstree
route (old school route not ip route ls, shame shame)
selinux policies
runs thru the init.d and does a service status on each
sestatus
uname
</code></pre>

<p>See that ps up there?</p>

<pre><code>grep "collector" ps
root     20589 13.0  1.5 133620 15408 pts/1    S+   23:17   0:00 ./collector -d sw -p 1234
</code></pre>

<p>So much for not saving my root password. It also shows up in:</p>

<pre><code>rawxml/getprocesslist.xml
xml/processlist.xml
</code></pre>

<p>Before anyone gets mad at dell: I&#8217;m running this in a non standard way, if I used the install.sh the script would not use the -p option, and would instead prompt me for a password (which would not show up in the processlist). Still not sure why it wants me to type the root password when I am already running it as root, but ok.</p>

<p>Next the collector has straight up copied my:</p>

<pre><code>boot/grub/grub.conf
boot/grub/menu.lst
etc/aliases
etc/cron* (crontab, crondirs, etc)
etc/fstab
etc/host*
etc/ld.so.conf
etc/modprobe.conf
etc/redhat-release
etc/resolv.conf
etc/sysctl.conf
etc/mail/sendmail.cf
etc/pam.d/* (WAT?)
etc/sysconfig/* (entire dir and subdirs)
etc/X11/XF86Config
lib/modules/current/modules.dep
proc/ (many files copied here, 778)
var/log/dmesg
var/log/messages
</code></pre>

<p>This is WAY to much information to send to dell for any reason. How are you sending it to dell as well? I sure wouldn&#8217;t email it.</p>

<h3>The privacy report</h3>

<p>In the privacy report you get a lot less data. The logs directory is now blank, so everything is in the gui directory only. Which means we get to go through some annoying xml/xls (note: I find all xml/xsl annoying (don&#8217;t ask)). Allot of the same data is gathered, but now just dumped into xml.</p>

<p>We are gathering:</p>

<pre><code>/boot/grub/grub.conf
ls /boot
ls /boot/grub
cat boot/grub/device.map
chassis info
etc/X11/XF86Config
lsmod
cat /etc/modprobe.conf
cat lib/modules/current/modules.dep
list all rpms / publisher / size / install date, urlinfo, description
hardware io ranges
hardware irq info
cat /proc/meminfo
cat /etc/fstab
ifconfig (with ip info and mac addresses "Omitted by user")
cat resolv.conf (everything is omitted by user but domain is still listed. WAT?)
runs thru the init.d and does a service status on each
storage info (df info)
os version and kernel
connected usb devices
</code></pre>

<p>I like how the kernel version is omitted in the uname but is in the syssumlist. Heh.</p>

<h3>Other options</h3>

<p>The collector script has many different options, I don&#8217;t have any non-production dell gear right now, so I&#8217;m not willing to run the hardware report on a server that has hardware to run it on.</p>

<p>I ran the -lg and -ad options in the collector as well, but there was no difference to the sw logs. I imagine this would be different if I was running on an actual dell machine with actual dell hardware instead of the virtual machine that I&#8217;m running this on. :)</p>

<h1>Conclusion</h1>

<p>I won&#8217;t be running the dset tool on any production gear because:</p>

<ul>
<li>The package installation could cause issues with your system (not staying in /opt/dell, using &#8211;nodeps, conflicting sblim package with epel&#8217;s)</li>
<li>It wants your root password to be entered at a prompt of a python program, even if you are currently root</li>
<li>the non privacy report gathers way to much info about your system, under no circumstances should this be sent to anyone ever.</li>
<li>the password on the report zip is incredible insecure</li>
<li>add the domain in the resolv.conf to private information, or just don&#8217;t parse the resolv.conf at all</li>
</ul>


<h1>So what happened?</h1>

<p>I told the dell tech that I couldn&#8217;t run the dset tool due to dset doing some bad behaviors; but I had a dmidecode, and some megacli logs to send.</p>

<p>After dell reviewed the logs I emailed they shipped me a new battery.</p>

<h1>tldr version</h1>

<p>don&#8217;t run dset. If you absolutely must use dset, use the privacy option.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Well Hullo there.]]></title>
    <link href="http://shawn-sterling.github.com/blog/2012/10/14/test-goes-here/"/>
    <updated>2012-10-14T23:35:00-07:00</updated>
    <id>http://shawn-sterling.github.com/blog/2012/10/14/test-goes-here</id>
    <content type="html"><![CDATA[<p>Oh Hai.</p>

<p>I decided that I may have a thing or two to post about, it may be (read: will be) very infrequent, but such is life.</p>
]]></content>
  </entry>
  
</feed>
